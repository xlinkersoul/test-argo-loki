global:
  dnsService: "rke2-coredns-rke2-coredns"

loki:
  structuredConfig:
    ruler:
      enable_api: true
      alertmanager_url: http://my-mimir-nginx.mimir.svc.cluster.local:80/alertmanager
      # alertmanager_url: http://kube-prometheus-stack-alertmanager.kube-prometheus-stack.svc.cluster.local:9093

  schemaConfig:
    configs:
      - from: "2024-04-01"
        store: tsdb
        object_store: s3
        schema: v13
        index:
          prefix: loki_index_
          period: 24h
  limits_config:
    allow_structured_metadata: true
    retention_period: 24h
  compactor:
    retention_enabled: true
    retention_delete_delay: 2h
    delete_request_store: s3

deploymentMode: SimpleScalable

read:
  replicas: 3
  resources:
    requests:
      cpu: 250m
      memory: 256Mi
    limits:
      cpu: 500m
      memory: 512Mi
  persistence:
    enabled: true
    storageClass: longhorn-single-replica-strict-local
    size: 5Gi
write:
  replicas: 3
  resources:
    requests:
      cpu: 500m
      memory: 512Mi
    limits:
      cpu: 1000m
      memory: 1Gi
  persistence:
    enabled: true
    storageClass: longhorn-single-replica-strict-local
    size: 10Gi
backend:
  replicas: 3
  resources:
    requests:
      cpu: 500m
      memory: 512Mi
    limits:
      cpu: 1000m
      memory: 1Gi
  persistence:
    enabled: true
    storageClass: longhorn-single-replica-strict-local
    size: 20Gi

# Enable minio for storage
minio:
  enabled: true
  # use Longhorn to Replicate at block storage level
  mode: distributed
  # Number of drives attached to a node
  drivesPerNode: 1
  # Number of MinIO containers running
  replicas: 3
  persistence:
    enabled: true
    storageClass: longhorn-single-replica-strict-local
    size: 30Gi
  rootUser: "admin"
  rootPassword: "Egg@Digital@2025"
  ingress:
    enabled: true
    ingressClassName: ~
    path: /
    hosts:
      - loki-minio.play.k8s.maas
  consoleIngress:
    enabled: true
    ingressClassName: ~
    path: /
    hosts:
      - loki-minio-console.play.k8s.maas
  # buckets:
  #   - name: chunks
  #     objectlocking: true
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
              - key: app
                operator: In
                values:
                  - minio
          topologyKey: "kubernetes.io/hostname"

  topologySpreadConstraints:
    - maxSkew: 1
      topologyKey: "kubernetes.io/hostname"
      whenUnsatisfiable: DoNotSchedule
      labelSelector:
        matchLabels:
          app: minio
gateway:
  enabled: true
  replicas: 2
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 250m
      memory: 256Mi
  ingress:
    enabled: true
    annotations:
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      cert-manager.io/cluster-issuer: selfsigned-cluster-issuer
    hosts:
      - host: loki.play.k8s.maas
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: loki-gateway-tls
        hosts:
          - loki.play.k8s.maas

